extends layout.pug

block content
  .flex-container
    .terminal
      .tracks-container
        each track, index in tracks
          .track.hidden
            // Separate spans for track number, track name, and artist name, but type them together
            span.track-number(data-number=`${(index + 1).toString().padStart(2, '0')}`)
            span.track-name(data-track=`${track.name}`)
            span.track-artist(data-artist=`${track.artists[0].name}`)

  script.
    document.addEventListener('DOMContentLoaded', () => {
      const tracks = document.querySelectorAll('.track');
      let currentIndex = 0;

      // Function to simulate typing effect for the track parts
      function typeText(element, text, speed, callback) {
        let i = 0;
        function type() {
          if (i < text.length) {
            element.textContent += text.charAt(i);
            i++;
            setTimeout(type, speed);
          } else {
            callback(); // Once typing is complete, call the callback
          }
        }
        type();
      }

      // Function to start typing one track at a time
      function typeNextTrack() {
        if (currentIndex < tracks.length) {
          const trackElement = tracks[currentIndex];
          const parentTrack = trackElement;
          parentTrack.classList.remove('hidden'); // Show the track once typing starts

          const trackNumber = trackElement.querySelector('.track-number').getAttribute('data-number');
          const trackName = trackElement.querySelector('.track-name').getAttribute('data-track');
          const trackArtist = trackElement.querySelector('.track-artist').getAttribute('data-artist');

          // First type the track number
          typeText(trackElement.querySelector('.track-number'), trackNumber, 50, () => {
            // Then type the track name
            typeText(trackElement.querySelector('.track-name'), ` ${trackName} - `, 15, () => {
              // Then type the artist name
              typeText(trackElement.querySelector('.track-artist'), trackArtist, 15, () => {
                currentIndex++;
                typeNextTrack(); // Start typing the next track after this one finishes
              });
            });
          });
        }
      }

      typeNextTrack(); // Start typing the first track
    });
    
